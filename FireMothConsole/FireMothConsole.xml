<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FireMothConsole</name>
    </assembly>
    <members>
        <member name="T:RiotClub.FireMoth.Console.CommandLineOptions">
            <summary>
            Defines options available when invoking the application via command line.
            </summary>
        </member>
        <member name="P:RiotClub.FireMoth.Console.CommandLineOptions.ScanDirectory">
            <summary>
            Gets or sets the ScanDirectory option, indicating the input directory to scan.
            </summary>
        </member>
        <member name="P:RiotClub.FireMoth.Console.CommandLineOptions.RecursiveScan">
            <summary>
            Gets or sets a value indicating whether subdirectories of <see cref="P:RiotClub.FireMoth.Console.CommandLineOptions.ScanDirectory"/>
            will be recursively scanned in addition to its file contents.
            </summary>
        </member>
        <member name="T:RiotClub.FireMoth.Console.ExitState">
            <summary>
            Specifies the cause of program termination.
            </summary>
        </member>
        <member name="F:RiotClub.FireMoth.Console.ExitState.Normal">
            <summary>
            Inidicates nominal program execution and shutdown.
            </summary>
        </member>
        <member name="F:RiotClub.FireMoth.Console.ExitState.StartupError">
            <summary>
            Inidicates an error occurred during program initialization.
            </summary>
        </member>
        <member name="F:RiotClub.FireMoth.Console.ExitState.RuntimeError">
            <summary>
            Indicates an error occurred after program initialization.
            </summary>
        </member>
        <member name="T:RiotClub.FireMoth.Console.Initializer">
            <summary>
            Validates application startup parameters and initiates directory scan.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Console.Initializer.#ctor(System.IO.TextWriter,Microsoft.Extensions.Options.IOptions{RiotClub.FireMoth.Console.CommandLineOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:RiotClub.FireMoth.Console.Initializer"/> class.
            </summary>
            <param name="processArguments">An array of <see cref="T:System.String"/>s containing process
            startup (command line) arguments.</param>
            <param name="outputWriter">A <see cref="T:System.IO.TextWriter"/> that initialization messages will
            be written to.</param>
        </member>
        <member name="M:RiotClub.FireMoth.Console.Initializer.Start">
            <summary>
            Begins scanning the directory specified during application startup.
            </summary>
            <returns>An <see cref="T:RiotClub.FireMoth.Console.ExitState"/> indicating the result of the directory scan
            operation.</returns>
        </member>
        <member name="M:RiotClub.FireMoth.Console.Initializer.ContainsInvalidPathCharacters(System.String)">
            <summary>
            Checks the provided string for invalid path characters.
            </summary>
            <param name="testPath">The path to test.</param>
            <returns><c>true</c> if the provided path contains invalid path characters.</returns>
        </member>
        <member name="T:RiotClub.FireMoth.Console.Program">
            <summary>
            Application entry point.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Console.Program.Main(System.String[])">
            <summary>
            Class and application entry point. Validates command-line arguments, performs startup
            configuration, and invokes the directory scanning process.
            </summary>
            <param name="args">Command-line arguments.</param>
            <returns>An <c>int</c> return code indicating invocation result.</returns>
            <seealso cref="T:RiotClub.FireMoth.Console.CommandLineOptions"/>
        </member>
        <member name="M:RiotClub.FireMoth.Console.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host builder.
            </summary>
            <param name="args">Arguments to supply to the host builder.</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>.</returns>
        </member>
    </members>
</doc>
