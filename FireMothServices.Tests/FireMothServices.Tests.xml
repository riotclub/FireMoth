<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FireMoth.Services.Tests</name>
    </assembly>
    <members>
        <member name="T:RiotClub.FireMoth.Services.Tests.FileScanning.FileFingerprintTests">
             <summary>
             <see cref="T:RiotClub.FireMoth.Services.Repository.FileFingerprint"/> unit tests.
            
             Test naming convention: [method]_[preconditions]_[expected result]
            
             Ctor
             - base64Hash string can't be null or empty
                 * Ctor_NullString_ThrowsArgumentNullException
                 * Ctor_EmptyOrWhitespaceString_ThrowsArgumentException
             - base64Hash must be a valid base 64 string
                 * Ctor_InvalidBase64String_ThrowsArgumentException
            
             Equals
             - Null FileFingerprint returns false
                 - Equal_NullFileFingerprint_ReturnsFalse
             - Semantically equal FileFingerprint returns true
                 - Equal_EqualFileFingerprint_ReturnsTrue
             - Semantically different FileFingerprint returns false
                 - Equal_DifferentFileFingerprint_ReturnsFalse
             - Incompatible type returns false
                 - Equal_IncompatibleType_ReturnsFalse
            
             operator ==
             - Two semantically equal FileFingerprint instances returns true
                 - EqualityOperator_LeftOperandEqualsRightOperand_ReturnsTrue
             - One null and one non-null FileFingerprint instance returns false
                 - EqualityOperator_NullLeftOperandAndNonNullRightOperand_ReturnsFalse
                 - EqualityOperator_NonNullLeftOperandAndNullRightOperand_ReturnsFalse
             - Two null values returns true
                 - EqualityOperator_BothOperandsNull_ReturnsTrue
            
             operator !=
             - Two semantically equal FileFingerprint instances returns false
                 - InequalityOperator_LeftOperandEqualsRightOperand_ReturnsFalse
             - One null and one non-null FileFingerprint instance returns true
                 - InequalityOperator_NullLeftOperandAndNonNullRightOperand_ReturnsTrue
                 - InequalityOperator_NonNullLeftOperandAndNullRightOperand_ReturnsTrue
             - Two null values returns false
                 - InequalityOperator_BothOperandsNull_ReturnsFalse
            
             GetHashCode
             - Semantically equal instances have equal hashes
                  - GetHashCode_EqualInstances_ReturnEqualHashCodes
             .
             </summary>
        </member>
        <member name="T:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests">
             <summary>
             Ctor
                 - If ILogger is null, an ArgumentNullException is thrown.
            
             GetAsync
                 - Call without filter or orderBy parameters returns all FileFingerprints.
                 - Call with filter returns filtered results.
                 - Call with orderBy returns ordered results.
                 - Call with both filter and orderBy parameters returns filtered and ordered results.
            
             AddAsync
                 - If null FileFingerprint is provided, throw ArgumentNullException.
                 - After call, provided FileFingerprint has been added to the data access layer.
            
             AddManyAsync
                 - If null IEnumerable is provided, throw ArgumentNullException.
                 - After call, provided FileFingerprints have been added to the data access layer.
            
             DeleteAsync
                 - If null FileFingerprint is provided, throw ArgumentNullException.
                 - When data access layer contains a matching FileFingerprint, matching value is deleted.
                 - When data access layer contains a matching FileFingerprint, true is returned.
                 - When data access layer does not contain a matching FileFingerprint, no changes are made to
                   the data access layer.
                 - When data access layer does not contain a matching FileFingerprint, false is returned.
             </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.Ctor_ILoggerIsNull_ThrowsArgumentNullException">
            <summary>
            Ctor: If ILogger is null, an ArgumentNullException is thrown.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.GetAsync_WithoutFilterOrOrderBy_ReturnsAllFileFingerprints">
            <summary>
            GetAsync: Call without filter or orderBy parameters returns all FileFingerprints
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.GetAsync_WithFilter_ReturnsFilteredResults">
            <summary>
            GetAsync: Call with filter returns filtered results
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.GetAsync_WithOrderBy_ReturnsOrderedResults">
            <summary>
            GetAsync: Call with orderBy returns ordered results.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.GetAsync_WithFilterAndOrderBy_ReturnsFilteredAndOrderedResults">
            <summary>
            GetAsync: Call with both filter and orderBy parameters returns filtered and ordered results.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.AddAsync_WithNullFileFingerprint_ThrowsArgumentNullException">
            <summary>
            AddAsync: If null FileFingerprint is provided, throw ArgumentNullException.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.AddAsync_WithValidFileFingerprint_AddsFileFingerprint">
            <summary>
            AddAsync: After call, provided FileFingerprint has been added to the data access layer.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.AddManyAsync_WithNullIEnumerable_ThrowsArgumentNullException">
            <summary>
            AddManyAsync: If null IEnumerable is provided, throw ArgumentNullException.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.AddManyAsync_WithValidFileFingerprints_AddsFileFingerprints">
            <summary>
            After call, provided FileFingerprints have been added to the data access layer.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.DeleteAsync_WithNullFileFingerprint_ThrowsArgumentNullException">
            <summary>
            DeleteAsync: If null FileFingerprint is provided, throw ArgumentNullException.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.DeleteAsync_MatchingFileFingerprintExists_MatchingValueIsDeleted">
            <summary>
            DeleteAsync: When data access layer contains a matching FileFingerprint, matching value is
            deleted.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.DeleteAsync_MatchingFileFingerprintExists_ReturnsTrue">
            <summary>
            DeleteAsync: When data access layer contains a matching FileFingerprint, true is returned.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.DeleteAsync_MatchingFileFingerprintDoesNotExist_NoChangesMade">
            <summary>
            DeleteAsync: When data access layer does not contain a matching FileFingerprint, no changes
            are made to the data access layer.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.DataAccess.InMemory.MemoryDataAccessLayerTests.DeleteAsync_MatchingFileFingerprintDoesNotExist_ReturnsFalse">
            <summary>
            DeleteAsync: When data access layer does not contain a matching FileFingerprint, false is
            returned.
            </summary>
        </member>
        <member name="M:RiotClub.FireMoth.Services.Tests.Extensions.MockExtensions.VerifyLogCalled``1(Moq.Mock{Microsoft.Extensions.Logging.ILogger{``0}},System.String,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Verifies that a <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])"/>
            invocation with the specified message was performed on the mock.
            </summary>
            <typeparam name="T">The type of the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</typeparam>
            <param name="logger">The <see cref="T:Moq.Mock`1"/> on which the verificaation will
            be performed.</param>
            <param name="expectedMessage">The expected message to verify an invocation of
            <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])"/> with.</param>
            <param name="logLevel">The expected log level to verify an invocation of
            <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])"/> with.</param>
            <returns>The <see cref="T:Moq.Mock`1"/> on which this method was called.</returns>
        </member>
    </members>
</doc>
