FireMoth.Services Unit Tests
------------------------------------------------------------------------------------------------------------------------
/DataAccess/InMemory/MemoryDataAccessLayer
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [ILogger{MemoryDataAccessLayer}: null] throws an ArgumentNullException.

GetAsync
- Passing [filter: null, orderBy: null] returns an unfiltered, unordered collection.
- Passing [filter: non-null, orderBy: null] returns a filtered, unordered collection.
- Passing [filter: null, orderBy: non-null] returns an unfiltered, ordered collection.
- Passing [filter: non-null, orderBy: non-null] returns a filtered and ordered collection.

AddAsync
- Passing [FileFingerprint: null] throws an ArgumentNullException.
- Passing [FileFingerprint: non-null] adds a record to the data access layer.
    
AddManyAsync
- Passing [IEnumerable{FileFingerprint}: null] throws an ArgumentNullException.
- Passing [IEnumerable{FileFingerprint}: non-null] adds the records to the data access layer.
    
DeleteAsync
- Passing [FileFingerprint: null] throws an ArgumentNullException.
- Passing [FileFingerprint: matches a record in the data access layer] deletes the record.
- Passing [FileFingerprint: matches a record in the data access layer] returns true.
- Passing [FileFingerprint: does not match a record in the data access layer] does not modify existing records.
- Passing [FileFingerprint: does not match a record in the data access layer] returns false.
    
DeleteAllAsync
- Deletes all records from the data access layer.
- Returns the number of records that were deleted from the data access layer.
    
------------------------------------------------------------------------------------------------------------------------
/DataAccess/Sqlite/SqliteDataAccessLayer
Note: Unit tests should utilize mocks to test class functionality; actual SQLite DB interactions are tested in the
      integration tests.
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [ILogger{MemoryDataAccessLayer}: null] throws an ArgumentNullException.
- Passing [FireMothContext: null] throws an ArgumentNullException.

GetAsync
- Passing [filter: null, orderBy: null] returns an unfiltered, unordered collection.
- Passing [filter: non-null, orderBy: null] returns a filtered, unordered collection.
- Passing [filter: null, orderBy: non-null] returns an unfiltered, ordered collection.
- Passing [filter: non-null, orderBy: non-null] returns a filtered, ordered collection.

AddAsync
- Passing [FileFingerprint: null] throws an ArgumentNullException.
- Passing [FileFingerprint: non-null] adds a record to the data access layer.
    
AddManyAsync
- Passing [IEnumerable{FileFingerprint}: null] throws an ArgumentNullException.
- Passing [IEnumerable{FileFingerprint}: non-null] adds the records to the data access layer.

DeleteAsync
- Passing [FileFingerprint: null] throws an ArgumentNullException.
- Passing [FileFingerprint: matches a record in the data access layer] deletes the record.
- Passing [FileFingerprint: matches a record in the data access layer] returns true.
- Passing [FileFingerprint: does not match a record in the data access layer] does not modify existing records.
- Passing [FileFingerprint: does not match a record in the data access layer] returns false.
    
------------------------------------------------------------------------------------------------------------------------
/DataAnalysis/SHA256FileHasher
------------------------------------------------------------------------------------------------------------------------
ComputeHashFromStream
- Calling on a disposed object throws an ObjectDisposedException.
- Passing [Stream: null] throws an ArgumentNullException.
- Passing [Stream: contains less data than the input buffer size] returns a proper hash of the data.
- Passing [Stream: contains more data than the input buffer size] returns a proper hash of the data.
- Passing [Stream: contains no data] returns the proper hash for an empty data stream.

Dispose
- Calling on a non-disposed object disposes the object.
- Calling on a disposed object does not throw exceptions.

------------------------------------------------------------------------------------------------------------------------
/Extensions/StringExtensions
------------------------------------------------------------------------------------------------------------------------
IsEmptyOrWhiteSpace
    - Null strings return true.
    - Empty or whitespace strings return true.
    - Non-empty strings return false.
    
IsBase64String
    - Null string returns false.
    - Non-base64 string returns false.
    - Valid base64 string returns true.

------------------------------------------------------------------------------------------------------------------------
/FileScanning/ScanError
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [message: null] throws an ArgumentNullException.
- Passing [message: empty or whitespace] throws an ArgumentException.
- Passing [valid parameters] properly initializes an object.

OperatorEquality
- Passing [left and right refer to same object] returns true.
- Passing [left: null, right: null] returns true.
- Passing [left: null, right: non-null] returns false.
- Passing [left: non-null, right: null] returns false.
- Passing [left and right contain equal property values] returns true.

OperatorInequality
- Passing [left and right refer to same object] returns false.
- Passing [left: null, right: null] returns false.
- Passing [left: null, right: non-null] returns true.
- Passing [left: non-null, right: null] returns true.
- Passing [left and right contain equal property values] returns false.
    
EqualsObject
- Passing [object: null] returns false.
- Passing [object: not an instance of ScanError] returns false.
- Passing [object: instance of ScanError but does not contain equal property values] returns false.
- Passing [object: instance of ScanError and contains equal property values] returns true.
      
EqualsScanError
- Passing [ScanError?: null] returns false.
- Passing [ScanError?: does not contain equal property values] returns false.
- Passing [ScanError?: contains equal property values] returns true.
    
GetHashCode
- Calling on objects with different property values returns different hash codes.
- Calling on objects with equal property values returns the same hash code.
    
------------------------------------------------------------------------------------------------------------------------
/FileScanning/ScanResult
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Initializes all collection properties.

GetScannedFiles (Property)
    - Returns ScannedFiles property.
    
GetSkippedFiles (Property)
    - Returns SkippedFiles property.
    
GetErrors (Property)
    - Returns Errors property.
    
OperatorPlus
    - If left and right operands are both null, throws ArgumentNullException.
    - If left operand is null and right operand is non-null, returns new ScanResult 
      with values from right operand.
    - If left operand is non-null and right operand is null, returns new ScanResult
      with values from left operand.
    - If left and right operands are non-null, returns new ScanResult with combined
      values from both operands.
      
------------------------------------------------------------------------------------------------------------------------
/Orchestration/DirectoryScanOptions
------------------------------------------------------------------------------------------------------------------------
GetDirectory (Property)
    - Returns Directory property.
    
SetDirectory (Property)
    - Sets Directory property.
    
GetRecursive (property)
    - Returns Recursive property.
    
SetRecursive (property)
    - Sets Recursive property.

------------------------------------------------------------------------------------------------------------------------
/Orchestration/DirectoryScanOrchestrator
------------------------------------------------------------------------------------------------------------------------
Ctor
    - If IFileScanOrchestrator is null, ArgumentNullException is thrown.
    - If IOptions<DirectoryScanOptions> is null, ArgumentNullException is thrown.
    - If IOptions.Value property is null, ArgumentException is thrown.
    - If ILogger is null, ArgumentNullException is thrown.
    
ScanDirectoryAsync
    - If DirectoryScanOptions.Directory property is null, ArgumentException is
      thrown.
    - If options specify a recursive scan, the injected IFileScanOrchestrator's
      ScanFilesAsync method is called with all available files from the scan
      directory and its subdirectories, enumerated recursively.
    - If options do not specify a recursive scan, the injected
      IFileScanOrchestrator's ScanFilesAsync method is called with all available
      files from the scan directory, ignoring any files in subdirectories of the
      scan directory.
    - If the scan directory does not contain any files, the injected
      IFileScanOrchestrator's ScanFilesAsync method is not called, and the method
      returns a new, empty ScanResult.
    - The method outputs appropriate log information.
    
------------------------------------------------------------------------------------------------------------------------
/Orchestration/FileScanOrchestrator
------------------------------------------------------------------------------------------------------------------------
Ctor
    - If IFileFingerprintRepository is null, ArgumentNullException is thrown.
    - If IFileHasher is null, ArgumentNullException is thrown.
    - If ILogger is null, ArgumentNullException is thrown.
    
ScanFilesAsync
    - If IEnumerable<string> is null, ArgumentNullException is thrown.
    - For each file in the provided collection of files:
        - The IFileHasher's ComputeHashFromStream method is called.
        - The IFileFingerprintRepository's AddAsync method is called.
    - If IEnumerable<string> contains a valid collection of files, a ScanResult
      containing the correct results of the scan is returned.
    - The method outputs appropriate log information.

------------------------------------------------------------------------------------------------------------------------
/Repository/FileFingerprint
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Null fileName throws ArgumentNullException
    - Null directoryName throws ArgumentNullException
    - Null base64Hash throws ArgumentNullException
    - Invalid base64Hash throws ArgumentNullException
    
GetFileName
    - Returns the FileName property

GetDirectoryName
    - Returns the DirectoryName property

GetFileSize
    - Returns the FileSize property
    
GetBase64Hash
    - Returns the Base64Hash property
    
GetFullPath
    - Returns the properly formed full path
    
OperatorEquality
    - If left and right operand refer to the same object, returns true.
    - If left and right operands are both null, returns true.
    - If left operand is null and right operand is non-null, returns false.
    - If left operand is non-null and right operand is null, returns false.
    - If left and right operands contain equal property values, returns true.
    
OperatorInequality
    - If left and right operand refer to the same object, returns false.
    - If left and right operands are both null, returns false.
    - If left operand is null and right operand is non-null, returns true.
    - If left operand is non-null and right operand is null, returns true.
    - If left and right operands contain equal property values, returns false.
    
EqualsObject
    - If object is null, returns false.
    - If object is not an instance of FileFingerprint, returns false.
    - If object is an instance of FileFingerprint but does not contain equal property
      values, returns false.
    - If object is an instance of FileFingerprint and contains equal property values,
      returns true.
      
EqualsFileFingerprint
    - If FileFingerprint is null, returns false.
    - If FileFingerprint does not contain equal property values, returns false.
    - If FileFingerprint contains equal property values, returns true.

GetHashCode
    - Objects with different property values return different hash codes.
    - Objects with equal property values return the same hash code.    

------------------------------------------------------------------------------------------------------------------------
/Repository/FileFingerprintRepository
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Null IDataAccessLayer<FileFingerprint> throws ArgumentNullException
    
GetAsync
    - Null filter and null orderBy returns unfiltered, non-ordered results.
    - Null filter and valid orderBy returns unfiltered, ordered results.
    - Valid filter and null orderBy returns filtered, non-ordered results.
    - Valid filter and valid orderBy returns filtered, ordered results.
    
GetRecordsWithDuplicateHashesAsync 
    - Returns correct results after invocation.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/Csv/CsvFileFingerprintWriter
------------------------------------------------------------------------------------------------------------------------
Ctor
    - If StreamWriter is null, ArgumentNullException is thrown.
    - If ILogger is null, ArgumentNullException is thrown.
    - If IFactory is null, ArgumentNullException is thrown.
    - After creation, IFactory.CreateWriter has been called.
    
WriteFileFingerprintsAsync
    - If IEnumerable<FileFingerprint> is null, ArgumentNullException is thrown.
    - If empty IEnumerable<FileFingerprints> is provided, method returns with no
      calls made to the 
    - If object is disposed, ObjectDisposedException is thrown.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/Csv/FileFingerprintMap
------------------------------------------------------------------------------------------------------------------------
Ctor
    - After call, ClassMap has been registered to associated CsvWriter.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/ConsoleProgressBar
------------------------------------------------------------------------------------------------------------------------
[Not very testable. Refactor someday if we keep using it.]

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/ScanOutputOptions
------------------------------------------------------------------------------------------------------------------------
GetOutputFile (Property)
    - Returns OutputFile property.
    
SetOutputFile (Property)
    - Sets OutputFile property.
    
GetOutputDuplicateInfoOnly (property)
    - Returns OutputDuplicateInfoOnly property.
    
SetOutputDuplicateInfoOnly (property)
    - Sets OutputDuplicateInfoOnly property.

------------------------------------------------------------------------------------------------------------------------
/Tasks/DuplicateFileHandler
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Null IFileFingerprintRepository throws ArgumentNullException
    - Null IOptions<DuplicateFileHandlingOptions> throws ArgumentNullException
    - Null ILogger<DuplicateFileHandler> throws ArgumentNullException

RunAsync
    - If invoked with option DuplicateFileHandlingOptions.Delete, duplicate files
      in the repository are deleted.
    - If invoked with option DuplicateFileHandlingOptions.Move, duplicate files
      in the repository are moved to the directory specified in options.
    - If invoked with option DuplicateFileHandlingOptions.NoAction, no files are
      deleted or moved.

------------------------------------------------------------------------------------------------------------------------
/Tasks/DuplicateFileHandlingOptions
------------------------------------------------------------------------------------------------------------------------
GetDuplicateFileHandlingMethod
    - Returns the DuplicateFileHandlingMethod

SetDuplicateFileHandlingMethod
    - Sets the DuplicateFileHandlingMethod
    
GetMoveDuplicateFilesToDirectory
    - Returns the MoveDuplicateFilesToDirectory
    
SetMoveDuplicateFilesToDirectory
    - Sets the MoveDuplicateFilesToDirectory
