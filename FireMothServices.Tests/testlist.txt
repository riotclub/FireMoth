FireMoth.Services Unit Tests
------------------------------------------------------------------------------------------------------------------------
/DataAccess/InMemory/MemoryDataAccessLayer
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [ILogger{MemoryDataAccessLayer}:null] throws an ArgumentNullException.

GetAsync
- Passing [filter:null, orderBy:null] returns an unfiltered, unordered collection.
- Passing [filter:non-null, orderBy:null] returns a filtered, unordered collection.
- Passing [filter:null, orderBy:non-null] returns an unfiltered, ordered collection.
- Passing [filter:non-null, orderBy:non-null] returns a filtered and ordered collection.

AddAsync
- Passing [FileFingerprint:null] throws an ArgumentNullException.
- Passing [FileFingerprint:non-null] adds a record to the data access layer.
    
AddManyAsync
- Passing [IEnumerable{FileFingerprint}:null] throws an ArgumentNullException.
- Passing [IEnumerable{FileFingerprint}:non-null] adds the records to the data access layer.
    
DeleteAsync
- Passing [FileFingerprint:null] throws an ArgumentNullException.
- Passing [FileFingerprint:matches a record in the data access layer] deletes the record.
- Passing [FileFingerprint:matches a record in the data access layer] returns true.
- Passing [FileFingerprint:does not match a record in the data access layer] does not modify existing records.
- Passing [FileFingerprint:does not match a record in the data access layer] returns false.
    
DeleteAllAsync
- Deletes all records from the data access layer.
- Returns the number of records that were deleted from the data access layer.
    
------------------------------------------------------------------------------------------------------------------------
/DataAccess/Sqlite/SqliteDataAccessLayer
Note: Unit tests should utilize mocks to test class functionality; actual SQLite DB interactions are tested in the
      integration tests.
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [ILogger{MemoryDataAccessLayer}:null] throws an ArgumentNullException.
- Passing [FireMothContext:null] throws an ArgumentNullException.

GetAsync
- Passing [filter:null, orderBy:null] returns an unfiltered, unordered collection.
- Passing [filter:non-null, orderBy:null] returns a filtered, unordered collection.
- Passing [filter:null, orderBy:non-null] returns an unfiltered, ordered collection.
- Passing [filter:non-null, orderBy:non-null] returns a filtered, ordered collection.

AddAsync
- Passing [FileFingerprint:null] throws an ArgumentNullException.
- Passing [FileFingerprint:non-null] adds a record to the data access layer.
    
AddManyAsync
- Passing [IEnumerable{FileFingerprint}:null] throws an ArgumentNullException.
- Passing [IEnumerable{FileFingerprint}:non-null] adds the records to the data access layer.

DeleteAsync
- Passing [FileFingerprint:null] throws an ArgumentNullException.
- Passing [FileFingerprint:matches a record in the data access layer] deletes the record.
- Passing [FileFingerprint:matches a record in the data access layer] returns true.
- Passing [FileFingerprint:does not match a record in the data access layer] does not modify existing records.
- Passing [FileFingerprint:does not match a record in the data access layer] returns false.
    
------------------------------------------------------------------------------------------------------------------------
/DataAnalysis/SHA256FileHasher
------------------------------------------------------------------------------------------------------------------------
ComputeHashFromStream
- Calling on a disposed object throws an ObjectDisposedException.
- Passing [Stream:null] throws an ArgumentNullException.
- Passing [Stream:contains less data than the input buffer size] returns a proper hash of the data.
- Passing [Stream:contains more data than the input buffer size] returns a proper hash of the data.
- Passing [Stream:contains no data] returns the proper hash for an empty data stream.

Dispose
- Calling on a non-disposed object disposes the object.
- Calling on a disposed object does not throw exceptions.

------------------------------------------------------------------------------------------------------------------------
/FileScanning/ScanError
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [message:null] throws an ArgumentNullException.
- Passing [message:empty or whitespace] throws an ArgumentException.
- Passing [valid parameters] properly initializes an object.

GetPath (property)
- Returns the proper value of the path property.
    
GetMessage (property)
- Returns the proper value of the message property.
    
GetException (property)
- Returns the proper value of the exception property.
   
------------------------------------------------------------------------------------------------------------------------
/FileScanning/ScanResult
------------------------------------------------------------------------------------------------------------------------
Ctor
- Initializes all collection properties.

GetScannedFiles (Property)
- Returns the proper value of the ScannedFiles property.
    
GetSkippedFiles (Property)
- Returns the proper value of the SkippedFiles property.
    
GetErrors (Property)
- Returns the proper value of the Errors property.
    
OperatorAddition
- Passing [a:null, b:null] throws ArgumentNullException.
- Passing [a:null, b:non-null] returns new ScanResult with values from b.
- Passing [a:non-null, b:null] returns new ScanResult with values from a.
- Passing [a:non-null, b:non-null] returns new ScanResult with combined values from both a and b.
      
------------------------------------------------------------------------------------------------------------------------
/Orchestration/DirectoryScanOptions
------------------------------------------------------------------------------------------------------------------------
InitDirectory (Property)
- Sets Directory property.

InitRecursive (property)
- Sets Recursive property.

------------------------------------------------------------------------------------------------------------------------
/Orchestration/DirectoryScanOrchestrator
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [IFileScanOrchestrator:null] throws ArgumentNullException.
- Passing [IFileSystem:null] throws ArgumentNullException.<br/>
- Passing [IOptions{DirectoryScanOptions}:null] throws ArgumentNullException.
- Passing [IOptions{DirectoryScanOptions} with null Value.Directory property] throws ArgumentException.
- Passing [ILogger{DirectoryScanOrchestrator}:null] throws ArgumentNullException.
- Passing [valid parameters] creates a new object.

ScanDirectoryAsync
- When DirectoryScanOptions.Recursive is true, calls IFileScanOrchestrator.ScanFilesAsync with all available files from
  the scan directory and its subdirectories, enumerated recursively. 
- When DirectoryScanOptions.Recursive is false, calls IFileScanOrchestrator.ScanFilesAsync with all available files from
  the scan directory, ignoring any files in subdirectories. 
- When DirectoryScanOptions.Directory specifies an empty directory, IFileScanOrchestrator.ScanFilesAsync
  is not called.
- Relevant messages are logged.

------------------------------------------------------------------------------------------------------------------------
/Orchestration/FileScanOrchestrator
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [IFileFingerprintRepository:null] throws ArgumentNullException.
- Passing [IFileHasher:null] throws ArgumentNullException.
- Passing [IFileSystem:null] throws ArgumentNullException.
- Passing [ILogger{FileScanOrchestrator}:null] throws ArgumentNullException.
- Passing [valid parameters] creates a new object.
    
ScanFilesAsync
- Passing [IEnumerable{string}:null] throws ArgumentNullException.
- Passing [IEnumerable{string}:containing set of file paths] calls IFileHasher.ComputeHashFromStream and
  IFileFingerprintRepository.AddAsync for each file in the collection.
- Passing [IEnumerable{string}:containing set of file paths] returns a ScanResult containing the correct results of the
  scan.
- Passing [IEnumerable{string}:containing files that throw IOException or UnauthorizedAccessException during scanning]
  skips the errored files and adds them to the ScanResult.SkippedFiles collection.
- Passing [IEnumerable{string}:containing files that throw IOException or UnauthorizedAccessException during scanning]
  skips the errored files and adds an error to the ScanResult.Errors collection.
- Passing [IEnumerable{string}:containing files that throw IOException or UnauthorizedAccessException during scanning]
  writes a properly formatted error message to the log.  
- Completing the scan writes a properly formatted information message to the log.
- The method writes properly formatted information messages to the log for each file scanned. 

------------------------------------------------------------------------------------------------------------------------
/Repository/FileFingerprint
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Null fileName throws ArgumentNullException
    - Null directoryName throws ArgumentNullException
    - Null base64Hash throws ArgumentNullException
    - Invalid base64Hash throws ArgumentNullException
    
GetFileName
    - Returns the FileName property

GetDirectoryName
    - Returns the DirectoryName property

GetFileSize
    - Returns the FileSize property
    
GetBase64Hash
    - Returns the Base64Hash property
    
GetFullPath
    - Returns the properly formed full path
    
OperatorEquality
    - If left and right operand refer to the same object, returns true.
    - If left and right operands are both null, returns true.
    - If left operand is null and right operand is non-null, returns false.
    - If left operand is non-null and right operand is null, returns false.
    - If left and right operands contain equal property values, returns true.
    
OperatorInequality
    - If left and right operand refer to the same object, returns false.
    - If left and right operands are both null, returns false.
    - If left operand is null and right operand is non-null, returns true.
    - If left operand is non-null and right operand is null, returns true.
    - If left and right operands contain equal property values, returns false.
    
EqualsObject
    - If object is null, returns false.
    - If object is not an instance of FileFingerprint, returns false.
    - If object is an instance of FileFingerprint but does not contain equal property
      values, returns false.
    - If object is an instance of FileFingerprint and contains equal property values,
      returns true.
      
EqualsFileFingerprint
    - If FileFingerprint is null, returns false.
    - If FileFingerprint does not contain equal property values, returns false.
    - If FileFingerprint contains equal property values, returns true.

GetHashCode
    - Objects with different property values return different hash codes.
    - Objects with equal property values return the same hash code.    

------------------------------------------------------------------------------------------------------------------------
/Repository/FileFingerprintRepository
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Null IDataAccessLayer<FileFingerprint> throws ArgumentNullException
    
GetAsync
    - Null filter and null orderBy returns unfiltered, non-ordered results.
    - Null filter and valid orderBy returns unfiltered, ordered results.
    - Valid filter and null orderBy returns filtered, non-ordered results.
    - Valid filter and valid orderBy returns filtered, ordered results.
    
GetRecordsWithDuplicateHashesAsync 
    - Returns correct results after invocation.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/Csv/CsvFileFingerprintWriter
------------------------------------------------------------------------------------------------------------------------
Ctor
    - If StreamWriter is null, ArgumentNullException is thrown.
    - If ILogger is null, ArgumentNullException is thrown.
    - If IFactory is null, ArgumentNullException is thrown.
    - After creation, IFactory.CreateWriter has been called.
    
WriteFileFingerprintsAsync
    - If IEnumerable<FileFingerprint> is null, ArgumentNullException is thrown.
    - If empty IEnumerable<FileFingerprints> is provided, method returns with no
      calls made to the 
    - If object is disposed, ObjectDisposedException is thrown.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/Csv/FileFingerprintMap
------------------------------------------------------------------------------------------------------------------------
Ctor
    - After call, ClassMap has been registered to associated CsvWriter.

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/ConsoleProgressBar
------------------------------------------------------------------------------------------------------------------------
[Not very testable. Refactor someday if we keep using it.]

------------------------------------------------------------------------------------------------------------------------
/Tasks/Output/ScanOutputOptions
------------------------------------------------------------------------------------------------------------------------
GetOutputFile (Property)
    - Returns OutputFile property.
    
SetOutputFile (Property)
    - Sets OutputFile property.
    
GetOutputDuplicateInfoOnly (property)
    - Returns OutputDuplicateInfoOnly property.
    
SetOutputDuplicateInfoOnly (property)
    - Sets OutputDuplicateInfoOnly property.

------------------------------------------------------------------------------------------------------------------------
/Tasks/DuplicateFileDeleteHandler
------------------------------------------------------------------------------------------------------------------------
Ctor
    - Passing [IFileFingerprintRepository:null] throws ArgumentNullException.
    - Passing [IFileSystem:null] throws ArgumentNullException.
    - Passing [ILogger{DuplicateFileHandler}] throws ArgumentNullException.

RunTaskAsync
    - Duplicate files in the repository are deleted.
    - If duplicate file from repository does not exist, warning is reported and processing
      continues.
    - Relevant messages are logged.

------------------------------------------------------------------------------------------------------------------------
/Tasks/DuplicateFileMoveHandler
------------------------------------------------------------------------------------------------------------------------
Ctor
- Passing [IFileFingerprintRepository:null] throws ArgumentNullException.
- Passing [IFileSystem:null] throws ArgumentNullException.
- Passing [IOptions{DuplicateFileHandlingOptions}:null] throws ArgumentNullException.
- Passing [ILogger{DuplicateFileHandler}:null] throws ArgumentNullException.
- Passing [valid parameters] properly initializes an object.

RunTaskAsync
- If option DuplicateFileHandlingOptions.DuplicateFileHandlingMethod is not
  DuplicateFileHandlingMethod.Move, return without moving files.
- If option DuplicateFileHandlingOptions.MoveDuplicateFilesToDirectory is not a valid directory,
  return without moving files.      
- If invoked with option DuplicateFileHandlingOptions.Move and
  DuplicateFileHandlingOptions.MoveDuplicateFilesToDirectory is a valid directory, duplicate files
  in the repository are moved to the specified directory.
- If DuplicateFileHandlingOptions.MoveDuplicateFilesToDirectory contains files with the same name as
  duplicate files being moved, the duplicate files are given unique names before being moved.
- Relevant messages are logged.

------------------------------------------------------------------------------------------------------------------------
/Tasks/DuplicateFileHandlingOptions
------------------------------------------------------------------------------------------------------------------------
GetDuplicateFileHandlingMethod
    - Returns the DuplicateFileHandlingMethod

SetDuplicateFileHandlingMethod
    - Sets the DuplicateFileHandlingMethod
    
GetMoveDuplicateFilesToDirectory
    - Returns the MoveDuplicateFilesToDirectory
    
SetMoveDuplicateFilesToDirectory
    - Sets the MoveDuplicateFilesToDirectory

------------------------------------------------------------------------------------------------------------------------
/Extensions/StringExtensions
------------------------------------------------------------------------------------------------------------------------
IsEmptyOrWhiteSpace
    - Null strings return true.
    - Empty or whitespace strings return true.
    - Non-empty strings return false.
    
IsBase64String
    - Null string returns false.
    - Non-base64 string returns false.
    - Valid base64 string returns true.
